---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

interface Props {
	alt: string
	caption?: string
	src: string
	width?: 60 | 80
}

const { alt, caption, src, width } = Astro.props

const resolveAsset = () => {
	const normalizedPath = src.replace('@', '../')
	const images = import.meta.glob<{ default: ImageMetadata }>('../assets/images/*.{jpeg,jpg,png,gif}')
	const img = images[normalizedPath]
	if (!img) throw new Error(`"${src}" does not exist in glob: "src/assets/images/*.{jpeg,jpg,png,gif}"`)

	return img
}

const image = src.startsWith('@assets')
	? { _type: 'internal', src: resolveAsset() } as const
	: { _type: 'external', src } as const

---
<figure>
	{image._type === 'internal' && (
		<Image src={image.src()} alt={alt} class={width && `img-${width}`} />
	)}
	{image._type === 'external' && (
		<Image src={image.src} alt={alt} class={width && `img-${width}`} inferSize />
	)}

	{caption && <figcaption>{caption}</figcaption>}
</figure>

<style lang="scss">
	@import '@styles/vars.scss';

	img {
		display: block;
		margin: auto;
	}

	.img-60 {
		width: 75%;

		@include tablet {
			width: 60%;
		}
	}

	.img-80 {
		width: 85%;

		@include tablet {
			width: 80%;
		}
	}

	figcaption {
		text-align: center;
		font-size: var(--fs-2);
		margin-top: var(--space-s);
	}
</style>
